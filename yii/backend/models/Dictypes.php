<?php

namespace backend\models;

use Yii;
use yii\web\UploadedFile;
use yii\helpers\Url;

/**
 * This is the model class for table "{{%dict_category}}".
 *
 * @property integer $id
 * @property string $name
 * @property string $url_tag
 * @property integer $parent
 * @property integer $active
 * @property integer $priority
 * @property string $created_at
 * @property string $updated_at
 */
class Dictypes extends \yii\db\ActiveRecord
{

    public $file;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%dict_category}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['url_tag', 'parent', 'active', 'priority', 'name', 'parent'], 'required'],
            [['parent', 'active', 'priority', 'types', 'on_main'], 'integer'],
            [['created_at', 'updated_at'], 'safe'],
            [['name', 'url_tag', 'image'], 'string', 'max' => 255],
            [['file'], 'image']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => '№',
            'name' => 'Назва виду робіт',
            'url_tag' => 'URL тег',
            'parent' => 'Категорія',
            'image'=> 'Картинка-іконка 64х64px .PNG ',
            'file'=> 'Картинка-іконка 64х64px .PNG ',
            'active' => 'Активне',
            'on_main'=>'Вивід на головній сторінці',
            'priority' => 'Пріорітет виводу',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }


    public function beforeSave($insert)
    {
        if ($file = UploadedFile::getInstance($this, 'file')) {

            //-- remove old files
            $model_old =  Dictypes::findOne($this->id);
            $dir = Yii::getAlias('@type_images').'/types/';
            if($model_old) {
                  if (file_exists($dir.$model_old->image)) {
                       @unlink($dir.$model_old->image);
                  }
            }
            //--

            if (file_exists($dir.$this->image)) {
               @unlink($dir.$this->image);
            }
            $this->image = strtotime('now').'_'.Yii::$app->getSecurity()->generateRandomString(6).'.'.$file->extension;
            $file->saveAs($dir.$this->image);
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    public function beforeDelete(){

        // delete dictJobs as child dicTypes
        Dictypes::deleteAll("parent ='" . $this->id . "'");
        return parent::beforeDelete();
    }

    public function getSmallImage() {
        if($this->image){
            if ($this->image) {
                return /*str_replace('admin', '', Url::home(true)).*/'http://frontend.dev/uploads/types/'.$this->image;
            }
        }
    }

    public function getParentCat() {
        return $this->hasOne(\backend\models\Dictcategory::className(), ['id'=>'parent'])->where(['active'=>1, 'parent'=>0]);
    }
}
